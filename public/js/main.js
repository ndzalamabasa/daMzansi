(()=>{"use strict";class t{constructor(t,e,s=0,a=0,r){this.userName=t,this.userAvatar=e,this.position=s,this.playerTurn=a,this.avatarSettings=r}move(t){return this.position+t}positionUser(){this.setUserAvatar(this.avatarSettings),document.getElementById(this.position).appendChild(this.avatarSettings)}setUserAvatar(){this.avatarSettings.setAttribute("src",this.userAvatar)}userTurnIndicator(){const t=document.createElement("img");return t.classList.add("absolute","top-2.5","right-3.5","h-20","w-20"),t.setAttribute("src",this.userAvatar),t}}const e=document.querySelectorAll(".avatar"),s="./assets/images/avatars/";let a;const r=[];e.forEach((e=>{e.addEventListener("click",(e=>{const i=e.target,n=i.getAttribute("src"),c=n.lastIndexOf("/"),o=n.lastIndexOf(".");let l=n.slice(c+1,o);const u=n.slice(o+1);if(n.includes("selected")){l=l.replace("-selected","");const t=`${s}${l}.${u}`;i.setAttribute("src",t),r.splice(r.indexOf(l),1),console.log(r)}else{const e=`${s}${l}-selected.${u}`;i.setAttribute("src",e),a=new t(l,`${s}${l}.${u}`),r.push(`${a.userName}:${a.userAvatar}`),console.log(r)}}))})),document.getElementById("playButton").addEventListener("click",(()=>{a?window.location.href=`./game.html?user=${a.userName}&avatar=${a.userAvatar}&list=${r}`:alert("Please select an avatar to continue")}))})();